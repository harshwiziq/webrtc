// Generated by CoffeeScript 1.4.0
  var EventEmitter, WebSocketServer, sessionHandler, wrapSession, log;

  EventEmitter = require('events').EventEmitter;
  sessionHandler = require('./session').handler;

  var emitter = require('../editor-events');
  var map = {};

  wrapSession = function(conn, vc_id, coms) {
    var wrapper;
    wrapper = new EventEmitter;
    wrapper.abort = function() {
		log.error("wrapper abort");
      return;
    };
    wrapper.stop = function() {
		log.error("wrapper stop");
      return;
    };
    wrapper.send = function(response, sessionId) {
      if (wrapper.ready(response.doc, sessionId)) {
		  /*
		   * Somehow send info to the other users
		   */
		  log.info ({ response : response, vc_id : vc_id }, "info sent to browser");
		  coms.send_info(vc_id, "code-editor", "code-editor", "data-sync", response);
        return;
      }
    };
    wrapper.ready = function(doc, sessionId) {
		if (!doc || !sessionId || map[vc_id][doc] === sessionId)
			return true;
		log.debug ('connection lost so not sending data');
		return false;
    };
	wrapper.add = function (doc_name, sessionId) {
		map[vc_id] = map[vc_id] || {};
		map[vc_id][doc_name] = sessionId;
		log.info({ map : map }, "entry added to socket map");
	};
    conn.on(vc_id, function(data) {
      var parsed;
      try {
        return wrapper.emit('message', data);
      } catch (error) {
        return log.error("Received data parsing error " + error);
      }
    });
    return wrapper;
  };

  exports.attach = function(createAgent, options) {
	log = options.log;
	log.debug('Attaching to WebSocket');
	emitter.on('connection', function (vc_id, coms) {
		log.debug({ vc_id : vc_id }, 'invoking session Handler');
		return sessionHandler(wrapSession(emitter, vc_id, coms), createAgent, log);
	});
  };
