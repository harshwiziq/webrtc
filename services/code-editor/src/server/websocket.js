// Generated by CoffeeScript 1.4.0
(function() {
  var EventEmitter, WebSocketServer, sessionHandler, wrapSession;

  EventEmitter = require('events').EventEmitter;

  WebSocketServer = require('ws').Server;

  sessionHandler = require('./session').handler;

  wrapSession = function(conn) {
    var wrapper;
    wrapper = new EventEmitter;
    wrapper.abort = function() {
		console.log("wrapper abort");
      return conn.close();
    };
    wrapper.stop = function() {
		console.log("wrapper stop");
      return conn.close();
    };
    wrapper.send = function(response) {
      if (wrapper.ready()) {
        return conn.send(JSON.stringify(response));
      }
    };
    wrapper.ready = function() {
      return conn.readyState === 1;
    };
    conn.on('message', function(data) {
      var parsed;
      try {
        parsed = JSON.parse(data);
        return wrapper.emit('message', parsed);
      } catch (error) {
        return console.log("Received data parsing error " + error);
      }
    });
    //wrapper.headers = conn.upgradeReq.headers;
    //wrapper.address = conn._socket.server._connectionKey != null;
    return wrapper;
  };

function verify (info, callback) {
	callback (true, 0, null);
}
  exports.attach = function(server, createAgent, options) {
    var wss;
	console.log('Attaching websocket');
    wss = new WebSocketServer({
      server: server,
	  verifyClient : verify
    });
    return wss.on('connection', function(conn) {
      return sessionHandler(wrapSession(conn), createAgent);
    });
  };

}).call(this);
