#!/bin/bash

QUIET='-sS'
CURL_OUTINFO='\r\n[ http-code: %{http_code} ]'
BASENAME=`basename $0`
DIR=`dirname $0`
JQ=$DIR/../bin/jq-linux64
TMP=/tmp/get-recbots.$$

trap "rm -f $TMP;" SIGHUP SIGINT SIGTERM EXIT
#set -e

function usage {
	echo Usage : $0 '[ options ]';
	echo '      --raw      : (OPTIONAL) raw JSON output';
	echo '      -h         : (OPTIONAL) ip or FQDN for the provisioning server';
	echo '      --help     : (OPTIONAL) prints the usage';
	echo ''
	echo '  Time related options';
	echo '      --utc      : (OPTIONAL) Show all times in UTC. Defaults to local time';
	echo '      --relative : (OPTIONAL) Show times relative to (servers) now';
	echo ' '
	echo '  Sorting and filtering related options'
	echo '      --nostale  : (OPTIONAL) Do not show stale entries';
	echo '      --start    : (OPTIONAL) Sort by ascending order of VM creation time (default)';
	echo '      --up       : (OPTIONAL) Sort by ascending order of VM up time';
	echo '      --reverse  : (OPTIONAL) Reverse the sense of any sorting applied';
	echo ''
	echo '  Output formatting options';
	echo '      --fs       : (OPTIONAL) add a field separator';
	exit 1;
}

while [ $# -gt 0 ];
do
	[ "$1" == '--help' ]     && { usage; }
	[ "$1" == '--raw'  ]     && { RAW=y; }
	[ "$1" == '--utc' ]      && { NODE_ARGS=$NODE_ARGS" $1"; }
	[ "$1" == '--relative' ] && { NODE_ARGS=$NODE_ARGS" $1"; }
	[ "$1" == '--nostale' ]  && { NODE_ARGS=$NODE_ARGS" $1"; }
	[ "$1" == '--start' ]    && { NODE_ARGS=$NODE_ARGS" $1"; }
	[ "$1" == '--reverse' ]  && { NODE_ARGS=$NODE_ARGS" $1"; }
	[ "$1" == '--up' ]       && { NODE_ARGS=$NODE_ARGS" $1"; }
	[ "$1" == '--fs' ]       && { NODE_ARGS=$NODE_ARGS" $1"; }
	[ "$1" == '-h' ]         && { HOST=$2; shift; }

	shift;
done

[ "$HOST" == "" ] && {
		export HOST=http://localhost:2178;
}

curl $QUIET $USERPASSWORD -kL -w "$CURL_OUTINFO" -H "Content-Type: application/json" -X GET $HOST/prov/v1/config/resource/recording/variant/bots > $TMP
[ "$RAW" == "y" ] || (cd helper-scripts; node prov-get-recbots --in_file $TMP $NODE_ARGS)
[ "$RAW" == "y" ] && [ "$(grep http-code $TMP | grep 200)" = "" ] && cat $TMP;
[ "$RAW" == "y" ] && [ "$(grep http-code $TMP | grep 200)" != "" ] && { cat $TMP | grep -v http-code | $JQ '.'; cat $TMP | grep http-code; }

echo
