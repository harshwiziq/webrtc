# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/trusty64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  config.vm.network "public_network"
  config.vm.hostname = "sagarmatha"

  config.vm.provision "file", source: "install.sh", destination: "install/install.sh"
  config.vm.provision "file", source: "install-nodejs.sh", destination: "install/install-nodejs.sh"
  config.vm.provision "file", source: "install-mongo.sh", destination: "install/install-mongo.sh"
  config.vm.provision "file", source: "install-docker.sh", destination: "install/install-docker.sh"
  config.vm.provision "file", source: "install-redis.sh", destination: "install/install-redis.sh"
  config.vm.provision "file", source: "grant-perms.sh", destination: "install/grant-perms.sh"
  config.vm.provision "file", source: "grant-sudo.sh", destination: "install/grant-sudo.sh"
  config.vm.provision "file", source: "install-authbind.sh", destination: "install/install-authbind.sh"

  # Copy configuration files
  config.vm.provision "file", source: "configs/redis/redis.conf", destination: "install/configs/redis/redis.conf"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
  # config.vm.provision "shell", path: "install/install.sh"
  config.vm.provision "shell", inline: "cd install; bash -x install.sh"

  # Azure Specific configuration
  config.vm.box = 'azure'
  config.vm.boot_timeout = 1200

  config.vm.provider :azure do |azure|

	  #full path to pem file
	  azure.mgmt_certificate = File.expand_path('~/.ssh/azurevagrant.key')
	  azure.mgmt_endpoint = 'https://management.core.windows.net'

	  ##to get this run: azure account list
	  azure.subscription_id = '1f4f32e0-afe8-4d0d-8966-2d04f13d56a3'

	  azure.storage_acct_name = 'portalvhds45chfl0v6g15b' # optional. A new one will be generated if not provided.

	  ##to get this run: azure vm image list | Select-String "Datacenter" |
	  azure.vm_image    = 'b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_04_4-LTS-amd64-server-20160406-en-us-30GB'

	  azure.vm_user = 'vagrant' # defaults to 'vagrant' if not provided
	  azure.vm_password = 'Vagrant123#!' # min 8 characters. should contain a lower case letter, an uppercase letter, a number and a special character

	  azure.vm_name = 'indus-vagrant' # max 15 characters. contains letters, number and hyphens. can start with letters and can end with letters and numbers
	  azure.cloud_service_name = 'indus-vagrant' # same as vm_name. leave blank to auto-generate

	  ##to get this run: azure vm location list
	  azure.vm_location = 'Southeast Asia'

	  azure.tcp_endpoints = '80,443'
	  azure.ssh_port = '22'
  end

  # config.ssh.private_key_path = File.expand_path('~/.ssh/id_rsa')
  config.ssh.username = 'vagrant' # the one used to create the VM
  config.ssh.password = 'Vagrant123#!' # the one used to create the VM

  ENV["LC_ALL"] = "en_US.UTF-8"
end
